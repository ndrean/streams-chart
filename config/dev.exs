import Config

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we can use it
# to bundle .js and .css sources.
config :ex_streams, ExStreamsWeb.Endpoint,
  # Binding to loopback ipv4 address prevents access from other machines.
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  http: [ip: {127, 0, 0, 1}, port: 4000],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "zgw4w7zQi1zCpZ39H5rT6VdvIyBgpdgDW+8MQNstMgt5z2Wc61n9P2Q+Q1KOQlxR",
  live_reload: [
    web_console_logger: true,
    patterns: [
      # ~r"priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/ex_streams_web/(controllers|live|components)/.*(ex|heex)$",
      ~r"lib/ex_streams/.*(ex)$"
    ]
  ],
  watchers: [
    pnpm: [
      "vite",
      "serve",
      "--mode",
      "development",
      "--config",
      "vite.config.js",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]

# config :live_debugger,
#   # IP on which LiveDebugger will be hosted
#   ip: {127, 0, 0, 1},
#   # Port on which LiveDebugger will be hosted
#   port: 4007,
#   # Secret key used for LiveDebugger.Endpoint
#   secret_key_base: "zgw4w7zQi1zCpZ39H5rT6VdvIyBgpdgDW+8MQNstMgt5z2Wc61n9P2Q+Q1KOQlxr",
#   # Signing salt used for LiveDebugger.Endpoint
#   signing_salt: "your_signing_salt",
#   # Adapter used in LiveDebugger.Endpoint
#   adapter: Bandit.PhoenixAdapter,
#   # Forces LiveDebugger to start even if project is not started with the `mix phx.server`
#   server: true

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Enable dev routes for dashboard and mailbox
config :ex_streams, dev_routes: true

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

config :phoenix_live_view,
  # Include HEEx debug annotations as HTML comments in rendered markup
  debug_heex_annotations: true,
  # Enable helpful, but potentially expensive runtime checks
  enable_expensive_runtime_checks: true
config :ex_streams, ExStreamsWeb.Endpoint,
    watcher: [
      pnpm: [
        "vite",
        "serve",
        "--mode",
        "development",
        "--config",
        "vite.config.js",
        cd: Path.expand("../assets", __DIR__)
      ]
    ]
config :ex_streams, ExStreamsWeb.Endpoint,
    watcher: [
      pnpm: [
        "vite",
        "serve",
        "--mode",
        "development",
        "--config",
        "vite.config.js",
        cd: Path.expand("../assets", __DIR__)
      ]
    ]

# Vite watcher configuration added by mix assets.install
config :ex_streams, ExStreamsWeb.Endpoint,
  watchers: [
    pnpm: [
      "vite",
      "serve",
      "--mode",
      "development",
      "--config",
      "vite.config.js",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]

# Vite watcher configuration added by mix assets.install
config :ex_streams, ExStreamsWeb.Endpoint,
  watchers: [
    pnpm: [
      "vite",
      "serve",
      "--mode",
      "development",
      "--config",
      "vite.config.js",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]

# Vite watcher configuration added by mix assets.install
config :ex_streams, ExStreamsWeb.Endpoint,
  watchers: [
    pnpm: [
      "vite",
      "serve",
      "--mode",
      "development",
      "--config",
      "vite.config.js",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]

# Vite watcher configuration added by mix assets.install
config :ex_streams, ExStreamsWeb.Endpoint,
  watchers: [
    pnpm: [
      "vite",
      "serve",
      "--mode",
      "development",
      "--config",
      "vite.config.js",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]

# Vite watcher configuration added by mix assets.install
config :ex_streams, ExStreamsWeb.Endpoint,
  watchers: [
    pnpm: [
      "vite",
      "serve",
      "--mode",
      "development",
      "--config",
      "vite.config.js",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]

# Vite watcher configuration added by mix assets.install
config :ex_streams, ExStreamsWeb.Endpoint,
  watchers: [
    pnpm: [
      "vite",
      "serve",
      "--mode",
      "development",
      "--config",
      "vite.config.js",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]

# Vite watcher configuration added by mix assets.install
config :ex_streams, ExStreamsWeb.Endpoint,
  watchers: [
    pnpm: [
      "vite",
      "serve",
      "--mode",
      "development",
      "--config",
      "vite.config.js",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]

# Vite watcher configuration added by mix assets.install
config :ex_streams, ExStreamsWeb.Endpoint,
  watchers: [
    pnpm: [
      "vite",
      "serve",
      "--mode",
      "development",
      "--config",
      "vite.config.js",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]

# Vite watcher configuration added by mix assets.install
config :ex_streams, ExStreamsWeb.Endpoint,
  watchers: [
    pnpm: [
      "vite",
      "serve",
      "--mode",
      "development",
      "--config",
      "vite.config.js",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]

# Vite watcher configuration added by mix assets.install
config :ex_streams, ExStreamsWeb.Endpoint,
  watchers: [
    pnpm: [
      "vite",
      "serve",
      "--mode",
      "development",
      "--config",
      "vite.config.js",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]

# Vite watcher configuration added by mix assets.install
config :ex_streams, ExStreamsWeb.Endpoint,
  watchers: [
    pnpm: [
      "vite",
      "serve",
      "--mode",
      "development",
      "--config",
      "vite.config.js",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]

# Vite watcher configuration added by mix assets.install
config :ex_streams, ExStreamsWeb.Endpoint,
  watchers: [
    pnpm: [
      "vite",
      "serve",
      "--mode",
      "development",
      "--config",
      "vite.config.js",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]

# Vite watcher configuration added by mix assets.install
config :ex_streams, ExStreamsWeb.Endpoint,
  watchers: [
    pnpm: [
      "vite",
      "serve",
      "--mode",
      "development",
      "--config",
      "vite.config.js",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]

# Vite watcher configuration added by mix assets.install
config :ex_streams, ExStreamsWeb.Endpoint,
  watchers: [
    pnpm: [
      "vite",
      "serve",
      "--mode",
      "development",
      "--config",
      "vite.config.js",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]

# Vite watcher configuration added by mix assets.install
config :ex_streams, ExStreamsWeb.Endpoint,
  watchers: [
    pnpm: [
      "vite",
      "serve",
      "--mode",
      "development",
      "--config",
      "vite.config.js",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]

# Vite watcher configuration added by mix assets.install
config :ex_streams, ExStreamsWeb.Endpoint,
  watchers: [
    pnpm: [
      "vite",
      "serve",
      "--mode",
      "development",
      "--config",
      "vite.config.js",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]

# Vite watcher configuration added by mix assets.install
config :ex_streams, ExStreamsWeb.Endpoint,
  watchers: [
    pnpm: [
      "vite",
      "serve",
      "--mode",
      "development",
      "--config",
      "vite.config.js",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]

# Vite watcher configuration added by mix assets.install
config :ex_streams, ExStreamsWeb.Endpoint,
  watchers: [
    pnpm: [
      "vite",
      "serve",
      "--mode",
      "development",
      "--config",
      "vite.config.js",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]

# Vite watcher configuration added by mix assets.install
config :ex_streams, ExStreamsWeb.Endpoint,
  watchers: [
    pnpm: [
      "vite",
      "serve",
      "--mode",
      "development",
      "--config",
      "vite.config.js",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]

# Vite watcher configuration added by mix assets.install
config :ex_streams, ExStreamsWeb.Endpoint,
  watchers: [
    pnpm: [
      "vite",
      "serve",
      "--mode",
      "development",
      "--config",
      "vite.config.js",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]

# Vite watcher configuration added by mix assets.install
config :ex_streams, ExStreamsWeb.Endpoint,
  watchers: [
    pnpm: [
      "vite",
      "serve",
      "--mode",
      "development",
      "--config",
      "vite.config.js",
      cd: Path.expand("../assets", __DIR__)
    ]
  ]
